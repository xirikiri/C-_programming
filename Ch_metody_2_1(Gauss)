// chisl_met_6s_2_1.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include <iostream>

using namespace std;

void show_matrix(double **matrix, int x, int y);
void Action(double **matrix, int x, int y, int start);
void Gauss(double **matrix, int x, int y);
int main()
{
	int x = 5;
	int y = 4;
	//create matrix
	double** matrix = new double*[y];
	for (int i = 0; i < y; i++)
	{
		matrix[i] = new double[x];
	}
	//fill matrix
	matrix[0][0] = 1; matrix[0][1] = 4; matrix[0][2] = -9; matrix[0][3] = 7; matrix[0][4] = -67;
	matrix[1][0] = 2; matrix[1][1] = -2; matrix[1][2] = -2; matrix[1][3] = 3; matrix[1][4] = -57;
	matrix[2][0] = -1; matrix[2][1] = 3; matrix[2][2] = -9; matrix[2][3] = -1; matrix[2][4] = -26;
	matrix[3][0] = -5; matrix[3][1] = 2; matrix[3][2] = 2; matrix[3][3] = 1; matrix[3][4] = 52;
	//show matrix
	show_matrix(matrix, x, y);
	Gauss(matrix, x, y);
	show_matrix(matrix, x, y);
	//delete matrix
	for (int i = 0; i < y; i++)
	{
		delete[] matrix[i];
	}
	return 0;
}

void show_matrix(double **matrix, int x, int y)
{
	for (int i = 0; i < y; i++)
	{
		for (int j = 0; j < x; j++)
		{
			cout << matrix[i][j] << ' ';
		}
		cout << endl;
	}
	cout << endl << endl;
}
void Action(double **matrix, int x, int y, int start)
{
	if (matrix[start][start] != 0)
	{
		for (int i = start+1; i < y; i++)
		{
			double* temp = new double[x-start];
			for (int j = 0; j < (x - start); j++)
			{
				temp[j] = (-(matrix[i][start]) / matrix[start][start])*matrix[start][j+start];
			}
			for (int j = 0; j < (x - start); j++)
			{
				matrix[i][j+start] = temp[j] + matrix[i][j+start];
			}
		}
	}
}
void Gauss(double **matrix, int x, int y)
{
//	double * answer = new double[y];
	for (int start = 0; start < y; start++)
	{
		Action(matrix, x, y, start);
	}
	for (int j = y; j > 0; j--)
	{
		double temp;
		for (int i = 0; i < j; i++)
		{

		}
	}
}
